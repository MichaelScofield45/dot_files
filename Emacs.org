#+TITLE: Master Org Configuration
#+AUTHOR: Pciu
#+DATE: <2021-01-22>
#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs.d/init.el

* General Appearance
** Getting rid of menus

#+begin_src emacs-lisp

  (setq inhibit-startup-message t) ; Get rid of the beginup bloat and menus.
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (tooltip-mode -1)
  (set-fringe-mode 10)

#+end_src

** Font

#+begin_src emacs-lisp

(set-face-attribute 'default nil :font "Fira Code Nerd Font" :height 110)

#+end_src

** Line numbers

#+begin_src emacs-lisp

  (column-number-mode)
  ;; (setq display-line-numbers-type 'relative)
  (global-display-line-numbers-mode t)

#+end_src

** Disable line numbers for certain modes

#+begin_src emacs-lisp

  (dolist (mode '(org-mode-hook ; Disable line numbers for org-mode or other such modes.
                  term-mode-hook
                  eshell-mode-hook
                  vterm-mode-hook))
    (add-hook mode(lambda () (display-line-numbers-mode 0))))

#+end_src

* Functionality
** Ido-mode

#+begin_src emacs-lisp

  (ido-mode t)

#+end_src

** Ibuffer

#+begin_src emacs-lisp

  (global-set-key (kbd "C-x C-b") 'ibuffer)

#+end_src

** Set indent behavior

#+begin_src emacs-lisp

  (setq-default tab-width 4)
  (setq-default electric-indent-inhibit nil) ; Make electric behave in a normal way. (global-whitespace-mode)
  (setq backward-delete-char-untabify-method nil)
  (setq-default indent-tabs-mode nil)
  (setq-default c-basic-offset 4) ; Set C indent to 4.

#+end_src

** Autocomplete Brackets

#+begin_src emacs-lisp

  (electric-pair-mode 1)
  (setq show-paren-style 'parenthesis)
  (show-paren-mode t) ; Disabled becaus of Rainbow-delimiters

#+end_src

** Disable auto-save mode

#+begin_src emacs-lisp

  (setq auto-save-default nil)

#+end_src

** Disable backup-files (~)

#+begin_src emacs-lisp

  (setq make-backup-files nil)

#+end_src

* Packages
** Base package configuration

#+begin_src emacs-lisp

  (require 'package)
  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
                           ("org" . "https://orgmode.org/elpa/")
                           ("gnu" . "http://elpa.gnu.org/packages/")))

  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))

#+end_src

** Use-package configuration

#+begin_src emacs-lisp

  (unless (package-installed-p 'use-package)
    (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)

#+end_src

** Which-key

#+begin_src emacs-lisp

  (use-package which-key
    :init (which-key-mode)
    :diminish which-key-mode
    :config
    (setq which-key-idle-delay 0.3))

#+end_src

** Evil-mode

#+begin_src emacs-lisp

  (use-package evil
    :init 
    (setq evil-want-C-u-scroll t) ; Allow scrolling up with ^u.
    :config
    (evil-mode 0))

#+end_src

** Magit

#+begin_src emacs-lisp

  (use-package magit)

#+end_src

** Org-mode
*** General settings
#+begin_src emacs-lisp

  (use-package org
    :init
      (defun turn-on-org-settings ()
        (setq org-startup-folded t
              org-startup-indented t
              org-pretty-entities t
              org-pretty-entities-include-sub-superscripts t
              org-use-sub-superscripts "{}"))


    :hook
      (org-mode . visual-line-mode))

#+end_src

*** Variable Pitch Fonts

#+begin_src emacs-lisp

  ;; Variable-pitch
  (set-face-attribute 'variable-pitch nil :font "Cantarell" :height 180)

  ;; Fixed-pitch
  (set-face-attribute 'fixed-pitch nil :font "Fira Code Nerd Font" :height 100)

  ;; (require 'org-indent) 
  (with-eval-after-load 'org-faces
      (dolist (face '((org-level-1 . 1.2)
                      (org-level-2 . 1.15)
                      (org-level-3 . 1.1)
                      (org-level-4 . 1.0)
                      (org-level-5 . 1.1)
                      (org-level-6 . 1.1)
                      (org-level-7 . 1.1)
                      (org-level-8 . 1.1)))
        (set-face-attribute (car face) nil :height (cdr face)))
        (turn-on-org-settings)) ; Necessary to apply all preferences.

      ;; (set-face-attribute 'org-block nil :foreground nil :inherit 'fixed-pitch)
      ;; (set-face-attribute 'org-code nil   :inherit '(shadow fixed-pitch))
      ;; (set-face-attribute 'org-indent nil :inherit '(org-hide fixed-pitch))
      ;; (set-face-attribute 'org-verbatim nil :inherit '(shadow fixed-pitch))
      ;; (set-face-attribute 'org-special-keyword nil :inherit '(font-lock-comment-face fixed-pitch))
      ;; (set-face-attribute 'org-meta-line nil :inherit '(font-lock-comment-face fixed-pitch))
      ;; (set-face-attribute 'org-checkbox nil :inherit 'fixed-pitch))

#+end_src

*** Org-babel

#+begin_src emacs-lisp

(org-babel-do-load-languages
 'org-babel-load-languages
 '((emacs-lisp . t)
   (python . t)))

; (setq org-confirm-babel-evaluate nil)

#+end_src

** Org-superstar

#+begin_src emacs-lisp

  (use-package org-superstar
    ; :config (setq org-superstar-headline-bullets-list '("⬢" "◆" "▲" "■"))
    :hook (org-mode . org-superstar-mode))

#+end_src

** Company-mode

#+begin_src emacs-lisp

  (use-package company
    :config
      (setq company-idle-delay 0) ; Tell company-mode to be immediate.
      (setq company-minimum-prefix-length 1)
    :hook (prog-mode . company-mode))


#+end_src

** Doom
*** Doom-themes

#+begin_src emacs-lisp

  (use-package doom-themes
    :config
    (setq doom-themes-enable-bold t)
    (setq doom-themes-enable-italic t)
    (load-theme 'doom-one t)) ; Might switch between "one" and "gruvbox", both are pretty good.

#+end_src

*** Doom-modeline

#+begin_src emacs-lisp

  (use-package doom-modeline
    :config
      (setq doom-modeline-height 25)
    :hook (after-init . doom-modeline-mode))

#+end_src

** Lsp-mode

#+begin_src emacs-lisp

  (use-package lsp-mode
    :init
      (setq lsp-keymap-prefix "C-c l")
    :config
      (setq lsp-idle-delay 0.500)
      (setq lsp-enable-snippet 1)
    :hook
      (c-mode . lsp)
      (c++-mode . lsp)
      (python-mode . lsp)
      (javascript-mode . lsp)
      (lsp-mode . lsp-enable-which-key-integration))

#+end_src

** Lsp-jedi 

#+begin_src emacs-lisp

  (add-to-list 'exec-path "/home/ms45/.local/bin/")
  (use-package lsp-jedi)
    ;; :config
    ;; (with-eval-after-load "lsp-mode"
    ;;   (add-to-list 'lsp-disabled-clients 'pyls)
    ;;   (add-to-list 'lsp-enabled-clients 'jedi)))

#+end_src

** Yasnippet

#+begin_src emacs-lisp

  (use-package yasnippet
    :config (yas-global-mode 1))

#+end_src

** Yasnippet-snippets

#+begin_src emacs-lisp

  (use-package yasnippet-snippets)

#+end_src

** Expand-region

#+begin_src emacs-lisp

  (use-package expand-region
    :bind ("C-=" . er/expand-region))

#+end_src

** Rainbow-delimiters

#+begin_src emacs-lisp

  (use-package rainbow-delimiters
    :hook (prog-mode . rainbow-delimiters-mode))

#+end_src

** Vterm

#+begin_src emacs-lisp

  (use-package vterm
      :ensure t)

#+end_src
