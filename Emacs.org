#+TITLE: Master Org Configuration
#+AUTHOR: Pciu
#+DATE: <2021-01-22>
#+PROPERTY: header-args:emacs-lisp :tangle ./init.el

* General Appearance
** Getting rid of menus

#+begin_src emacs-lisp

(setq inhibit-startup-message t) ; Get rid of the beginup bloat and menus.
(scroll-bar-mode -1)
(tool-bar-mode -1)
(menu-bar-mode -1)
(tooltip-mode -1)
(set-fringe-mode 10)

#+end_src

** Font

#+begin_src emacs-lisp

(set-face-attribute 'default nil :font "Fira Code Nerd Font" :height 100)

#+end_src

** Background Opacity (NOT WORKING)

#+begin_src emacs-lisp

  ;;(set-frame-parameter (selected-frame) 'alpha '(<active> . <inactive>))
   ;;(set-frame-parameter (selected-frame) 'alpha <both>)
   ;; (set-frame-parameter (selected-frame) 'alpha '(85 . 50))
   ;; (add-to-list 'default-frame-alist '(alpha . (85 . 50)))

#+end_src

** Line numbers

#+begin_src emacs-lisp

(column-number-mode)
(setq display-line-numbers-type 'relative)
(global-display-line-numbers-mode t)

#+end_src

** Disable line numbers for certain modes

#+begin_src emacs-lisp

  (dolist (mode '(org-mode-hook ; Disable line numbers for org-mode or other such modes.
                  term-mode-hook
                  eshell-mode-hook))
    (add-hook mode(lambda () (display-line-numbers-mode 0))))

#+end_src

** Set indent behavior

#+begin_src emacs-lisp

  (setq-default tab-width 4)
  (setq-default electric-indent-inhibit nil) ; Make electric behave in a normal way. (global-whitespace-mode)
  (setq backward-delete-char-untabify-method nil)
  (setq-default indent-tabs-mode nil)
  (setq-default c-basic-offset 4) ; Set C indent to 4.

#+end_src

** Aoutcomplete Brackets

#+begin_src emacs-lisp

(electric-pair-mode 1)
(setq show-paren-style 'parenthesis)
(show-paren-mode 0) ; Disabled becaus of Rainbow-delimiters

#+end_src

* Functionality
** Ido-mode

#+begin_src emacs-lisp

(ido-mode t)

#+end_src

** Window movement (NOT USED)

# #+begin_src emacs-lisp

# (windmove-default-keybindings)

# #+end_src

** Eshell

This next function is made to be able to truly clear the shell prompt with the *clear* command.

# #+begin_src emacs-lisp

#   (defun eshell/clear ()
#     (interactive)
#     "Clear the shell buffer."
#     (let ((inhibit-read-only t))
#       (erase-buffer)))

#   (add-hook 'eshell-mode-hook 'eshell/clear)


# #+end_src

** Ibuffer

#+begin_src emacs-lisp

  (global-set-key (kbd "C-x C-b") 'ibuffer)

#+end_src

* Packages
** Base package configuration

#+begin_src emacs-lisp

  (require 'package)
  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
                           ("org" . "https://orgmode.org/elpa/")
                           ("gnu" . "http://elpa.gnu.org/packages/")))

  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))

#+end_src

** Custom-set-variables

# #+begin_src emacs-lisp

# (custom-set-variables
# ;; custom-set-variables was added by Custom.
# ;; If you edit it by hand, you could mess it up, so be careful.
# ;; Your init file should contain only one such instance.
# ;; If there is more than one, they won't work right.
# '(custom-safe-themes
# '("78c4238956c3000f977300c8a079a3a8a8d4d9fee2e68bad91123b58a4aa8588" "d2e0c53dbc47b35815315fae5f352afd2c56fa8e69752090990563200daae434" "83c118cbcc517539597657b57c6743e394f03ea20405937c7ae2b691ec2718c1" "bd82c92996136fdacbb4ae672785506b8d1d1d511df90a502674a51808ecc89f" "711efe8b1233f2cf52f338fd7f15ce11c836d0b6240a18fffffc2cbd5bfe61b0" "2f1518e906a8b60fac943d02ad415f1d8b3933a5a7f75e307e6e9a26ef5bf570" "79278310dd6cacf2d2f491063c4ab8b129fee2a498e4c25912ddaa6c3c5b621e" "d6603a129c32b716b3d3541fc0b6bfe83d0e07f1954ee64517aa62c9405a3441" "b89ae2d35d2e18e4286c8be8aaecb41022c1a306070f64a66fd114310ade88aa" default))
# '(package-selected-packages
#   '(gruvbox-theme org magit evil evil-mode which-key doom-themes rainbow-delimiters doom-modeline use-package highlight-indent-guides company)))

# (custom-set-faces
# ;; custom-set-faces was added by Custom.
# ;; If you edit it by hand, you could mess it up, so be careful.
# ;; Your init file should contain only one such instance.
# ;; If there is more than one, they won't work right.
# )

# #+end_src

** Use-package configuration

#+begin_src emacs-lisp

(unless (package-installed-p 'use-package)
  (package-install 'use-package))

(require 'use-package)
(setq use-package-always-ensure t)

#+end_src

** Which-key

#+begin_src emacs-lisp

  (use-package which-key
    :init (which-key-mode)
    :diminish which-key-mode
    :config
    (setq which-key-idle-delay 0.3))

#+end_src

** Evil-mode

#+begin_src emacs-lisp

;; (use-package evil
;;   :init 
;;   (setq evil-want-C-u-scroll t) ; Allow scrolling up with ^u.
;;   :config
;;   (evil-mode 0))

#+end_src

** Magit

#+begin_src emacs-lisp

(use-package magit)

#+end_src

** Org-mode
*** General settings
#+begin_src emacs-lisp

  (use-package org
    :config
      (defun turn-on-org-settings ()
        (setq org-startup-indented t
              org-startup-folded t)
              (visual-line-mode))
    :hook (org-mode . turn-on-org-settings))

#+end_src

*** Org-babel

#+begin_src emacs-lisp

(org-babel-do-load-languages
 'org-babel-load-languages
 '((emacs-lisp . t)
   (python . t)))

; (setq org-confirm-babel-evaluate nil)x

#+end_src

** Company-mode

#+begin_src emacs-lisp

  (use-package company
    :config
      (setq company-idle-delay 0) ; Tell company-mode to be immediate.
      (setq compan-minimum-prefix-length 1)
    :hook (prog-mode . company-mode))


#+end_src

** Doom
*** Doom-themes

#+begin_src emacs-lisp

(use-package doom-themes
  :config
    (setq doom-themes-enable-bold t)
    (setq doom-themes-enable-italic t)
    (load-theme 'doom-one t)) ; Might switch between "one" and "gruvbox", both are pretty good.

#+end_src

*** Doom-modeline

#+begin_src emacs-lisp

(use-package doom-modeline
  :config
    (doom-modeline-mode 1))

#+end_src

** All-the-icons

#+begin_src emacs-lisp

(use-package all-the-icons)

#+end_src

** Rainbow-delimiters
#+begin_src emacs-lisp

(use-package rainbow-delimiters
  :hook (prog-mode . rainbow-delimiters-mode))

#+end_src

** Lsp-mode

#+begin_src emacs-lisp

  (use-package lsp-mode
    :init
      (setq lsp-keymap-prefix "C-c l")
    :config
      (setq lsp-idle-delay 0.500)
      (setq lsp-enable-snippet nil))
    ;:hook
      ;; (c-mode . lsp)
      ;; (cpp-mode . lsp)
      ;; (lsp-mode . lsp-enable-which-key-integration))

#+end_src

** Treemacs

#+begin_src emacs-lisp

  (use-package treemacs)

#+end_src

